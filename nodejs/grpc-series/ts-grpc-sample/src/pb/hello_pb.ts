// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file hello.proto (package hello, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message hello.SendHelloRequest
 */
export class SendHelloRequest extends Message<SendHelloRequest> {
  /**
   * @generated from field: string message = 1;
   */
  message = "";

  constructor(data?: PartialMessage<SendHelloRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "hello.SendHelloRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendHelloRequest {
    return new SendHelloRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendHelloRequest {
    return new SendHelloRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendHelloRequest {
    return new SendHelloRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendHelloRequest | PlainMessage<SendHelloRequest> | undefined, b: SendHelloRequest | PlainMessage<SendHelloRequest> | undefined): boolean {
    return proto3.util.equals(SendHelloRequest, a, b);
  }
}

/**
 * @generated from message hello.SendHelloResponse
 */
export class SendHelloResponse extends Message<SendHelloResponse> {
  /**
   * @generated from field: string message = 1;
   */
  message = "";

  constructor(data?: PartialMessage<SendHelloResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "hello.SendHelloResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendHelloResponse {
    return new SendHelloResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendHelloResponse {
    return new SendHelloResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendHelloResponse {
    return new SendHelloResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendHelloResponse | PlainMessage<SendHelloResponse> | undefined, b: SendHelloResponse | PlainMessage<SendHelloResponse> | undefined): boolean {
    return proto3.util.equals(SendHelloResponse, a, b);
  }
}

